En primer lugar, observamos que, sin modificar el código, el mensaje enviado por protocolo TCP ocupa 17 bytes. Para la trasnferencia de estos 17 bytes hemos necesitado una comunicación que consta de 7 paquetes y un total de 512 bytes. Esto se debe a la seguridad que proporciona el protocolo TCP. El cliente, desde el puerto 47218, envía un paquete SYN al servidor, con puerto 8877. El resvidor responde con su correspondiente paquete ACK asociado al SYN para que posteriormente el cliente vuelva a mandar el ACT termiando de establecer la conexión. El mensaje se transfiere en el siguiente frame y es confirmado posteriormente en el sexto.
En cuanto al protocolo UDP, se puede observar que, sin modificar el cófigo, el mensaje enviado ocupa 16 bytes. Para la transferencia de estos 16 bytes hemos necesitado una comunicación que consta de 2 paquetes y un total de 116 bytes. Esto se debe a que la conexión se establece en el mismo paquete en el que se envía el mensaje, siendo la respuesta del servidor igual de concisa.

Para evitar posibles confusiones, modificamos los archivos cliente para que envíen un mismo mensaje (estructura de dos enteros en la que cada uno de ellos toma el valor 0) y observamos que para un tamaño de mensaje de 8 bytes, UDP emplea 100 bytes en 2 paquetes mientras que TCP emplea 494 bytes en 7 paquetes.

Finalmente, definimos una estructura algo más compleja y la transferimos.